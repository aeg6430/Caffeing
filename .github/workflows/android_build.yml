name: Android Build (apps/mobile)

on:
  push:
    branches:
      - main 
    paths:
      - 'apps/mobile/**' 
      - '.github/workflows/android_build.yml'
    
  pull_request:  
    paths:
      - 'apps/mobile/**' 
      - '.github/workflows/android_build.yml'

  workflow_dispatch:

jobs:
  build_android:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.1"
          channel: stable 

      - name: Get dependencies
        working-directory: apps/mobile
        run: flutter pub get

      - name: Decode Keystore and Configure Signing
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > /home/runner/work/release-keystore.jks
          cat <<EOF > apps/mobile/android/key.properties
          storeFile=/home/runner/work/release-keystore.jks
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          EOF
          
      - name: Build Production APK
        working-directory: apps/mobile
        run: |
          flutter build apk --release \
            --obfuscate \
            --split-debug-info=build/app/debug-info \
            --dart-define=APP_API_ENDPOINT=${{ secrets.APP_PROD_API_ENDPOINT }} \
            -P GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}

      - name: Verify APK Exists
        working-directory: apps/mobile
        run: test -f build/app/outputs/apk/release/app-release.apk || exit 1

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-apk
          path: apps/mobile/build/app/outputs/apk/release/app-release.apk
