name: Build and Deploy .NET WebAPI to Cloud Run

on:
  push:
    branches:
      - main
    paths:
      - 'apps/backend/**'
  pull_request:
    paths:
      - 'apps/backend/**'
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: asia-east1
  SERVICE_NAME: caffeing-webapi
  IMAGE_NAME: caffeing-webapi
  REPO_NAME: caffeing-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.409'

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: projects/671405420443/locations/global/workloadIdentityPools/github-pool/providers/github-provider
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
        audience: 'https://googleapis.com/google.cloud.devtools.auth'

    - name: Configure Docker to use gcloud
      run: gcloud auth configure-docker asia-east1-docker.pkg.dev --quiet

    - name: Set IMAGE_URI environment variable
      run: echo "IMAGE_URI=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV

    - name: Build and push Docker image to Artifact Registry
      run: |
        echo "Building Docker image: $IMAGE_URI"
        docker build -t $IMAGE_URI -f apps/backend/Dockerfile apps/backend
        docker push $IMAGE_URI

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.GCP_REGION }}
        image: ${{ env.IMAGE_URI }}
        env_vars: |
          ASPNETCORE_ENVIRONMENT=Production
          Logging__LogLevel__Default=Information
          Logging__LogLevel__Microsoft.AspNetCore=Warning
          Cors__AllowedOrigins__0=${{ secrets.BACKEND_CORS_ORIGIN_0 }}
          Cors__AllowedMethods__0=GET
          Cors__AllowedMethods__1=POST
          Cors__AllowedMethods__2=PUT
          Cors__AllowedMethods__3=DELETE
          Cors__AllowedHeaders__0=Content-Type
          Cors__AllowedHeaders__1=Authorization
          Serilog__MinimumLevel__Default=Information
          Serilog__MinimumLevel__Override__Microsoft=Warning
          Serilog__MinimumLevel__Override__System=Warning
          Jwt__Key=${{ secrets.JWT_KEY }}
          Jwt__Issuer=com.caffeing
          Jwt__Audience=com.caffeing.app
          Jwt__ExpiresInMinutes=60
          Database__Provider=PostgreSql
          Database__Connection__DataSource=${{ secrets.DB_DATA_SOURCE }}
          Database__Connection__InitialCatalog=${{ secrets.DB_INITIAL_CATALOG }}
          Database__Connection__UserId=${{ secrets.DB_USER_ID }}
          Database__Connection__Password=${{ secrets.DB_PASSWORD }}
          Database__Connection__Pooling=true
          Database__Connection__MaxPoolSize=100
          Database__Connection__ConnectTimeout=30
          Turnstile__SecretKey=${{ secrets.TURNSTILE_SECRET_KEY }}
          Keystone__Endpoint=${{ secrets.KEYSTONE_ENDPOINT_URL }}

    - name: Output deployed service URL
      run: |
        echo "Deployed to: https://${{ env.GCP_REGION }}-run.googleapis.com/v1/projects/${{ env.GCP_PROJECT_ID }}/locations/${{ env.GCP_REGION }}/services/${{ env.SERVICE_NAME }}"
